name: Docker Build & Publish

on:
  workflow_call:
    inputs:
      dockerfile:
        required: false
        type: string
        description: "Path to Dockerfile"
        default: "Dockerfile"
      dockerContext:
        required: false
        type: string
        description: "The Docker context"
        default: "."
      publish:
        required: true
        type: boolean

jobs:
  docker_build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: inputs.publish == 'true'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine image name
        id: set_image_name
        run: echo "IMAGE_NAME=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 2)" >> $GITHUB_ENV

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Push Docker image to Docker Hub
        if: inputs.publish == 'true'
        run: |
          docker tag ${{ steps.set_image_name.outputs.image_name }}:${{ github.sha }} ${{ secrets.DOCKERHUB_REGISTRY_ID }}/${{ steps.set_image_name.outputs.image_name }}:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_REGISTRY_ID }}/${{ steps.set_image_name.outputs.image_name }}:${{ github.sha }}


  docker_publish:
    runs-on: ubuntu-22.04
    needs: docker_build
    if: ${{ inputs.publish == true }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ secrets.DOCKERHUB_REGISTRY_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_REGISTRY_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
